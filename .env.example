# Configuration de l'API ElectriCore
# Copiez ce fichier vers .env et adaptez les valeurs selon votre environnement

# ===========================================
# CONFIGURATION DES CLÉS API
# ===========================================

# Méthode 1: Une seule clé API principale
API_KEY=your-secure-api-key-here

# Méthode 2: Plusieurs clés API (séparées par des virgules)
# API_KEYS=key1,key2,key3

# ===========================================
# CONFIGURATION DE L'API
# ===========================================

# Métadonnées de l'API
API_TITLE="ElectriCore API"
API_VERSION="0.1.0"
API_DESCRIPTION="API sécurisée pour accéder aux données flux Enedis"

# Méthode d'authentification (header X-API-Key uniquement)
ENABLE_API_KEY_HEADER=true

# Endpoints publics (JSON array format)
# PUBLIC_ENDPOINTS='["/", "/health", "/docs", "/redoc", "/openapi.json"]'

# ===========================================
# EXEMPLES DE CLÉS API SÉCURISÉES
# ===========================================

# Pour générer une clé API sécurisée, utilisez :
# python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# Ou avec OpenSSL :
# openssl rand -base64 32
#
# Exemples de clés générées :
# API_KEY=Kx9vR4mN3pQ7wL2sF8uE6tY1nC5hB0jD9rI4oP7xZ2aV3wQ8mK1sL6fE
# API_KEYS=abc123def456,xyz789uvw012,mno345pqr678

# ===========================================
# SÉCURITÉ
# ===========================================

# IMPORTANT :
# - Ne jamais committer le fichier .env dans le contrôle de version
# - Utiliser des clés longues et aléatoires (32+ caractères)
# - Changer les clés régulièrement
# - Limiter l'accès aux clés aux personnes autorisées
# - Utiliser HTTPS en production

# ===========================================
# BASE DE DONNÉES
# ===========================================

# Le chemin vers la base DuckDB est configuré dans le code
# Par défaut : electricore/etl/flux_enedis_pipeline.duckdb