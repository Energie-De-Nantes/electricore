import pandas as pd
import pandera as pa
from pandera.typing import Series, DataFrame
from typing import Annotated
"""
| Formulaire SGE / Fiche catalogue / Intervention                                                  | Type_Evenement | Nature_Evenement | Description formulaire / fiche                                                                                           |
| ------------------------------------------------------------------------------------------------ | --------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------ |
| F100B                                                                                            | CONTRAT         | PMES              | PremiÃ¨re mise en service                                                                                                 |
| F120B                                                                                            | CONTRAT         | MES               | Mise en service sur installation existante                                                                               |
| F130                                                                                             | CONTRAT         | CFNS              | Changement de Fournisseur                                                                                                |
| F130                                                                                             | CONTRAT         | CFNE              | Changement de Fournisseur                                                                                                |
| F140B                                                                                            | CONTRAT         | RES               | RÃ©siliation                                                                                                              |
| F140 (RIF)                                                                                       | CONTRAT         | RES               | RÃ©siliation initiative fournisseur                                                                                       |
| F180                                                                                             | CONTRAT         | MCT               | Modification de formule tarifaire ou de puissance dâ€™acheminement                                                         |
| F1020                                                                                            | CONTRAT         | MES               | Mise en service ou rÃ©tablissement dans la journÃ©e (BTâ‰¤36 kVA)                                                            |
| M007                                                                                             | CONTRAT         | AUTRE             | Modification dâ€™information Client                                                                                        |
| F180                                                                                             | TECHNIQUE       | MCF               | Modification de la programmation du calendrier fournisseur                                                               |
| F185                                                                                             | TECHNIQUE       | CMAT              | Modification du dispositif de comptage sans impact sur la formule tarifaire dâ€™acheminement ou sur la puissance souscrite |
| F200B                                                                                            | TECHNIQUE       | COU               | Interventions pour impayÃ© et rÃ©tablissement                                                                              |
| F200B                                                                                            | TECHNIQUE       | RET               | Interventions pour impayÃ© et rÃ©tablissement                                                                              |
| F1020                                                                                            | TECHNIQUE       | RET               | Mise en service ou rÃ©tablissement dans la journÃ©e (BTâ‰¤36 kVA)                                                            |
| OpÃ©ration de maintenance sur Compteur ou Disjoncteur                                             | TECHNIQUE       | CMAT              | N/A                                                                                                                      |
| F800B                                                                                            | CONTRAT         | MES               | Mise en service dâ€™un raccordement provisoire pour une durÃ©e > 28j                                                        |
| F800B                                                                                            | CONTRAT         | RES               | RÃ©siliation dâ€™un raccordement provisoire pour une durÃ©e > 28j                                                            |
| F820                                                                                             | CONTRAT         | MES               | Mise en service dâ€™un raccordement provisoire pour une durÃ©e <= 28j                                                       |
| F820                                                                                             | CONTRAT         | RES               | RÃ©siliation dâ€™un raccordement provisoire pour une durÃ©e <= 28j                                                           |
| F825                                                                                             | CONTRAT         | MES               | Mise en service dâ€™un raccordement provisoire pour une durÃ©e <= 28j (saisie par le Distributeur)                          |
| F825                                                                                             | CONTRAT         | RES               | RÃ©siliation dâ€™un raccordement provisoire pour une durÃ©e <= 28j (saisie par le Distributeur)                              |
| F840B                                                                                            | TECHNIQUE       | MDBRA             | Raccordement BT < 36kVA                                                                                                  |
| F860                                                                                             | TECHNIQUE       | CMAT              | DÃ©placement de comptage / DÃ©placement ou modification de raccordement                                                    |
| F880                                                                                             | TECHNIQUE       | MDBRA             | Suppression de raccordement                                                                                              |
| F940B                                                                                            | TECHNIQUE       | AUTRE             | Intervention de courte durÃ©e                                                                                             |
| M007                                                                                             | CONTRAT         | MDACT             | Modification dâ€™information Client                                                                                        |
| Prestation de visite de contrÃ´le de branchement provisoire (Prolongation Branchement Provisoire) | TECHNIQUE       | AUTRE             | NA                                                                                                                       |
"""

class HistoriquePÃ©rimÃ¨tre(pa.DataFrameModel):
    """
    ðŸ“Œ ModÃ¨le Pandera pour l'historique des Ã©vÃ©nements contractuels.
    
    Contient toutes les modifications de pÃ©rimÃ¨tre au fil du temps.
    """

    # Timestamp
    Date_Evenement: Series[Annotated[pd.DatetimeTZDtype, "ns", "Europe/Paris"]] = pa.Field(nullable=False, coerce=True)

    # Couple d'identifiants
    pdl: Series[str] = pa.Field(nullable=False)
    Ref_Situation_Contractuelle: Series[str] = pa.Field(nullable=False)
    
    # Infos Contractuelles
    Segment_Clientele: Series[str] = pa.Field(nullable=False)
    Etat_Contractuel: Series[str] = pa.Field(nullable=False) # "EN SERVICE", "RESILIE", etc.
    Evenement_Declencheur: Series[str] = pa.Field(nullable=False)  # Ex: "MCT", "MES", "RES"
    Type_Evenement: Series[str] = pa.Field(nullable=False)
    Categorie: Series[str] = pa.Field(nullable=False)

    # Infos calculs tarifs
    Puissance_Souscrite: Series[int] = pa.Field(nullable=False, coerce=True)
    Formule_Tarifaire_Acheminement: Series[str] = pa.Field(nullable=False,)

    # Infos Compteur
    Type_Compteur: Series[str] = pa.Field(nullable=False)
    Num_Compteur: Series[str] = pa.Field(nullable=False)

    # Infos Demande (Optionnel)
    Ref_Demandeur: Series[str] = pa.Field(nullable=True)
    Id_Affaire: Series[str] = pa.Field(nullable=True)

    # RelÃ¨ve ? On ajoute lÃ  on on fait un modÃ¨le de relÃ¨ve Ã  part ?

class SituationPÃ©rimÃ¨tre(HistoriquePÃ©rimÃ¨tre):
    """
    ðŸ“Œ ModÃ¨le Pandera pour la situation Ã  une date donnÃ©e.
    
    GÃ©nÃ©rÃ©e Ã  partir de l'historique pour donner un Ã©tat du pÃ©rimÃ¨tre Ã  un instant `t`.
    Chaque `Ref_Situation_Contractuelle` doit Ãªtre unique.
    """

    @pa.check("Ref_Situation_Contractuelle")
    def unique_ref(cls, series: Series[str]) -> bool:
        """VÃ©rifie que chaque Ref_Situation_Contractuelle est unique dans la situation."""
        return series.is_unique

class VariationsMCT(pa.DataFrameModel):
    """
    ðŸ“Œ ModÃ¨le Pandera pour la sortie de `variations_mct_dans_periode`.
    
    Contient les variations de puissance et de tarif aprÃ¨s un MCT.
    """

    Date_MCT: Series[Annotated[pd.DatetimeTZDtype, "ns", "Europe/Paris"]] = pa.Field(nullable=False, coerce=True)

    Puissance_Souscrite_Avant: Series[int] = pa.Field(nullable=False, coerce=True)
    Puissance_Souscrite_AprÃ¨s: Series[int] = pa.Field(nullable=False, coerce=True)

    Formule_Tarifaire_Acheminement_Avant: Series[str] = pa.Field(nullable=False)
    Formule_Tarifaire_Acheminement_AprÃ¨s: Series[str] = pa.Field(nullable=False)

# ðŸ“Œ Fonction pour extraire la situation Ã  une date donnÃ©e
@pa.check_types
def extraire_situation(date: pd.Timestamp, historique: DataFrame[HistoriquePÃ©rimÃ¨tre]) -> DataFrame[SituationPÃ©rimÃ¨tre]:
    """
    Extrait la situation du pÃ©rimÃ¨tre Ã  une date donnÃ©e.
    
    Args:
        date (pd.Timestamp): La date de rÃ©fÃ©rence.
        historique (pd.DataFrame): L'historique des Ã©vÃ©nements contractuels.

    Returns:
        pd.DataFrame: Une vue du pÃ©rimÃ¨tre Ã  `date`, conforme Ã  `SituationPÃ©rimÃ¨tre`.
    """
    return (
        historique[historique["Date_Evenement"] <= date]
        .sort_values(by="Date_Evenement", ascending=False)
        .drop_duplicates(subset=["Ref_Situation_Contractuelle"], keep="first")
    )

@pa.check_types
def variations_dans_periode(
    deb: pd.Timestamp, fin: pd.Timestamp, historique: DataFrame[HistoriquePÃ©rimÃ¨tre]
) -> DataFrame[HistoriquePÃ©rimÃ¨tre]:
    """
    Extrait uniquement les variations (changements contractuels) qui ont eu lieu dans une pÃ©riode donnÃ©e.

    Args:
        deb (pd.Timestamp): DÃ©but de la pÃ©riode.
        fin (pd.Timestamp): Fin de la pÃ©riode.
        historique (pd.DataFrame): Historique des Ã©vÃ©nements contractuels.

    Returns:
        pd.DataFrame: Un sous-ensemble de l'historique contenant uniquement les variations dans la pÃ©riode.
    """
    return historique[
        (historique["Date_Evenement"] >= deb) & (historique["Date_Evenement"] <= fin)
    ].sort_values(by="Date_Evenement", ascending=True)  # Trie par ordre chronologique

@pa.check_types
def variations_mct_dans_periode(
    deb: pd.Timestamp, fin: pd.Timestamp, historique: DataFrame[HistoriquePÃ©rimÃ¨tre]
) -> DataFrame[VariationsMCT]:
    """
    DÃ©tecte les MCT dans une pÃ©riode donnÃ©e et renvoie les variations de Puissance_Souscrite
    et Formule_Tarifaire_Acheminement avant et aprÃ¨s chaque MCT.

    Args:
        deb (pd.Timestamp): DÃ©but de la pÃ©riode.
        fin (pd.Timestamp): Fin de la pÃ©riode.
        historique (pd.DataFrame): Historique des Ã©vÃ©nements contractuels.

    Returns:
        pd.DataFrame: Une DataFrame contenant les MCT et leurs variations.
    """

    # Filtrer uniquement les MCT dans la pÃ©riode donnÃ©e
    mct_events = historique[
        (historique["Date_Evenement"] >= deb) & (historique["Date_Evenement"] <= fin) &
        (historique["Evenement_Declencheur"] == "MCT")
    ].sort_values(by=["Ref_Situation_Contractuelle", "Date_Evenement"])

    # Liste des rÃ©sultats
    results = []

    for _, mct_row in mct_events.iterrows():
        ref_situation = mct_row["Ref_Situation_Contractuelle"]
        date_mct = mct_row["Date_Evenement"]

        # Trouver la ligne juste avant avec le mÃªme Ref_Situation_Contractuelle
        previous_event = historique[
            (historique["Ref_Situation_Contractuelle"] == ref_situation) &
            (historique["Date_Evenement"] < date_mct)
        ].sort_values(by="Date_Evenement", ascending=False).head(1)

        if not previous_event.empty:
            results.append({
                "Date_MCT": date_mct,
                "Puissance_Souscrite_Avant": previous_event.iloc[0]["Puissance_Souscrite"],
                "Puissance_Souscrite_AprÃ¨s": mct_row["Puissance_Souscrite"],
                "Formule_Tarifaire_Acheminement_Avant": previous_event.iloc[0]["Formule_Tarifaire_Acheminement"],
                "Formule_Tarifaire_Acheminement_AprÃ¨s": mct_row["Formule_Tarifaire_Acheminement"],
            })

    # Convertir en DataFrame
    return pd.DataFrame(results)

# ðŸ“Œ Main pour tester en dev
if __name__ == "__main__":
    print("ðŸš€ Test de gÃ©nÃ©ration de la situation du pÃ©rimÃ¨tre")

    # Historique rÃ©aliste avec des MCT bien placÃ©s
    historique = pd.DataFrame({
        "pdl": [
            "12345", "12345", "12345",  # PDL 12345
            "67890", "67890", "67890",  # PDL 67890
            "11111", "11111"  # PDL 11111
        ],
        "Ref_Situation_Contractuelle": [
            "A1", "A1", "A1",  # MÃªme Ref pour PDL 12345
            "B1", "B1", "B1",  # MÃªme Ref pour PDL 67890
            "C1", "C1"  # MÃªme Ref pour PDL 11111
        ],
        "Date_Evenement": pd.to_datetime([
            "2024-01-01", "2024-02-10", "2024-03-05",  # PDL 12345
            "2024-01-15", "2024-02-20", "2024-03-10",  # PDL 67890
            "2024-02-01", "2024-03-12"  # PDL 11111
        ]).tz_localize("Europe/Paris"),
        "Etat_Contractuel": [
            "EN SERVICE", "EN SERVICE", "RESILIE",  # PDL 12345
            "EN SERVICE", "EN SERVICE", "RESILIE",  # PDL 67890
            "EN SERVICE", "EN SERVICE"  # PDL 11111
        ],
        "Evenement_Declencheur": [
            "MES", "MCT", "RES",  # PDL 12345 (MCT entre MES et RES)
            "MES", "MCT", "RES",  # PDL 67890 (MCT entre MES et RES)
            "MES", "MCT"  # PDL 11111 (MCT en pÃ©riode active)
        ],
        "Type_Evenement": [
            "CONTRAT", "CONTRAT", "CONTRAT",  # PDL 12345
            "CONTRAT", "CONTRAT", "CONTRAT",  # PDL 67890
            "CONTRAT", "CONTRAT"  # PDL 11111
        ],
        "Segment_Clientele": [
            "RES", "RES", "RES",  # PDL 12345
            "RES", "RES", "RES",  # PDL 67890
            "PRO", "PRO"  # PDL 11111
        ],
        "Categorie": [
            "C2", "C2", "C2",  # PDL 12345
            "C2", "C2", "C2",  # PDL 67890
            "C5", "C5"  # PDL 11111
        ],
        "Type_Compteur": [
            "CCB", "CCB", "CCB",  # PDL 12345
            "CCB", "CCB", "CCB",  # PDL 67890
            "CCB", "CCB"  # PDL 11111
        ],
        "Num_Compteur": [
            "C1", "C1", "C1",  # PDL 12345
            "C2", "C2", "C2",  # PDL 67890
            "C3", "C3"  # PDL 11111
        ],
        "Puissance_Souscrite": [
            6, 9, 9,  # Changement Ã  9 kVA aprÃ¨s MCT pour PDL 12345
            12, 15, 15,  # Changement Ã  15 kVA aprÃ¨s MCT pour PDL 67890
            3, 6  # Changement Ã  6 kVA aprÃ¨s MCT pour PDL 11111
        ],
        "Formule_Tarifaire_Acheminement": [
            "BTINFCU4", "BTINFMU4", "BTINFMU4",  # PDL 12345
            "BTINFCUST", "BTINFCU4", "BTINFCU4",  # PDL 67890
            "BTINFCU4", "BTINFMU4"  # PDL 11111
        ],
        "Ref_Demandeur": [
            None, "Dem1", None,  # PDL 12345
            None, "Dem2", None,  # PDL 67890
            None, "Dem3"  # PDL 11111
        ],
        "Id_Affaire": [
            None, "Aff1", None,  # PDL 12345
            None, "Aff2", None,  # PDL 67890
            None, "Aff3"  # PDL 11111
        ]
    })


    # DÃ©finir la date de rÃ©fÃ©rence
    date_reference = pd.Timestamp("2024-02-15", tz="Europe/Paris")

    # Extraire la situation
    situation = extraire_situation(date_reference, historique)

    # Afficher le rÃ©sultat
    print("\nðŸ“Š Situation du pÃ©rimÃ¨tre au", date_reference)
    print(situation)

    # DÃ©finir la pÃ©riode d'analyse
    deb = pd.Timestamp("2024-01-01", tz="Europe/Paris")
    fin = pd.Timestamp("2024-03-15", tz="Europe/Paris")

    # Extraire les variations MCT
    variations_mct = variations_mct_dans_periode(deb, fin, historique)

    # Afficher les rÃ©sultats
    print("\nðŸ”„ Variations MCT dans la pÃ©riode du", deb, "au", fin)
    print(variations_mct)